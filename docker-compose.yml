services:
  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
      POSTGRES_DB: social_media
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10

  rest-api:
    build:
      context: restAPI
      dockerfile: Dockerfile
    image: rest-api:latest
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    ports:
      - 8888
    depends_on:
      db:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3
  authentication-server:
    build:
      context: authenticationServer
      dockerfile: Dockerfile
    image: authentication-server:latest
    ports:
      - 9999
    depends_on:
      db:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2

  nginx-rest-api:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rest-api
    ports:
      - 4000:4000